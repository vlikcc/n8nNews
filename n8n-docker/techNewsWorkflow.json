{
  "name": "My workflow",
  "nodes": [
    {
      "parameters": {
        "url": "https://ntv.com.tr/teknoloji.rss",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -820
      ],
      "id": "77022ffe-372f-4f42-bc06-94ab72faeb42",
      "name": "RSS Read",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "http://techcrunch.com/feed",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -680
      ],
      "id": "90d1dffe-d96c-4111-813f-3216477fe3f6",
      "name": "RSS Read1",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://www.cnet.com/rss/news/",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -520
      ],
      "id": "e7fee758-6eda-4754-8784-ed85658646f4",
      "name": "RSS Read2",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "http://techradar.com/feeds.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -360
      ],
      "id": "5351118a-e156-4e89-8c3a-c13df8b24256",
      "name": "RSS Read3",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://rss.nytimes.com/services/xml/rss/nyt/Technology.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -200
      ],
      "id": "7eb1abf7-72f4-4eb3-be47-7f0a01ad5998",
      "name": "RSS Read4",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://rss.nytimes.com/services/xml/rss/nyt/Science.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -40
      ],
      "id": "ea08bb0f-530d-4fc1-b865-621d7ffffdd5",
      "name": "RSS Read5",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "http://rss.cnn.com/rss/edition_technology.rss",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        120
      ],
      "id": "7f1b5b0c-ad22-4db4-bd25-fb3c920578e4",
      "name": "RSS Read8",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "http://rss.cnn.com/rss/edition_space.rss",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        280
      ],
      "id": "b9531605-fbea-4c42-ae70-f37c4d7f594f",
      "name": "RSS Read9",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "http://feeds.bbci.co.uk/news/technology/rss.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -1440
      ],
      "id": "43f6a11e-8704-4b83-95b1-3d15eaec493f",
      "name": "RSS Read12",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "http://feeds.bbci.co.uk/news/science_and_environment/rss.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -1300
      ],
      "id": "a1b33f59-c8fc-4563-affa-487da119eff3",
      "name": "RSS Read13",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://www.theguardian.com/uk/technology/rss",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -1140
      ],
      "id": "60ab75b8-8c64-4a3d-afbc-ed9df46de6a3",
      "name": "RSS Read14",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://www.theguardian.com/science/rss",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -980
      ],
      "id": "acc6bba1-49c2-4dfb-97ac-82f19d61f8f6",
      "name": "RSS Read15",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://www.lemonde.fr/sciences/rss_full.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -1760
      ],
      "id": "ff5d2770-7b23-4a45-b2fa-7b62a1fb3d21",
      "name": "RSS Read21",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://www.france24.com/en/rss",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -1600
      ],
      "id": "14fe9bdc-7709-43b7-b773-9b2ae8172729",
      "name": "RSS Read22",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://rss.cbc.ca/lineup/technology.xml",
        "options": {
          "ignoreSSL": false
        }
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -2100
      ],
      "id": "7868b3d2-972b-4ea6-8c02-69360462e89a",
      "name": "RSS Read25",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://www.abc.net.au/news/feed/51120/rss.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        -1920
      ],
      "id": "cfdd3533-e421-468b-a4a9-08cc278b83fa",
      "name": "RSS Read27",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "url": "https://www.svt.se/nyheter/vetenskap/rss.xml",
        "options": {}
      },
      "type": "n8n-nodes-base.rssFeedRead",
      "typeVersion": 1.2,
      "position": [
        -3820,
        500
      ],
      "id": "4f652382-08f4-4851-b805-fdba8076660d",
      "name": "RSS Read30",
      "onError": "continueRegularOutput"
    },
    {
      "parameters": {
        "jsCode": "// Wait node'undan gelen tüm verileri birleştir\nconst allRssData = [];\n\n// items dizisini kontrol et ve verileri birleştir\n$input.all().forEach(input => {\n    if (input.json && input.json.items) {\n        // RSS feed verilerini direkt olarak al\n        allRssData.push(...input.json.items);\n    } else if (Array.isArray(input.json)) {\n        // Dizi şeklinde gelen verileri al\n        allRssData.push(...input.json);\n    } else if (input.json) {\n        // Tekil veriyi al\n        allRssData.push(input.json);\n    }\n});\n\nconsole.log(`Toplam işlenecek haber sayısı: ${allRssData.length}`);\n\n// RSS'den görsel çıkarma fonksiyonu\nfunction extractImageFromRSS(item) {\n    let imageUrl = '';\n    \n    // 1. Enclosure URL (podcast/medya dosyaları için)\n    if (item.enclosure && item.enclosure.url && \n        (item.enclosure.url.includes('.jpg') || item.enclosure.url.includes('.png') || \n         item.enclosure.url.includes('.jpeg') || item.enclosure.url.includes('.webp'))) {\n        imageUrl = item.enclosure.url;\n    }\n    // 2. Media:content (RSS medya eklentisi)\n    else if (item['media:content'] && item['media:content']['$'] && item['media:content']['$'].url) {\n        imageUrl = item['media:content']['$'].url;\n    }\n    // 3. Media:thumbnail (küçük resim)\n    else if (item['media:thumbnail'] && item['media:thumbnail']['$'] && item['media:thumbnail']['$'].url) {\n        imageUrl = item['media:thumbnail']['$'].url;\n    }\n    // 4. Image field (bazı RSS formatları)\n    else if (item.image && typeof item.image === 'string') {\n        imageUrl = item.image;\n    }\n    else if (item.image && item.image.url) {\n        imageUrl = item.image.url;\n    }\n    // 5. HTML içeriğinden img tag'lerini bul\n    else if (item.content && typeof item.content === 'string') {\n        const imgMatch = item.content.match(/<img[^>]+src=[\"']([^\"'>]+)[\"'][^>]*>/i);\n        if (imgMatch && imgMatch[1]) {\n            imageUrl = imgMatch[1];\n        }\n    }\n    // 6. Description içeriğinden img tag'lerini bul\n    else if (item.description && typeof item.description === 'string') {\n        const imgMatch = item.description.match(/<img[^>]+src=[\"']([^\"'>]+)[\"'][^>]*>/i);\n        if (imgMatch && imgMatch[1]) {\n            imageUrl = imgMatch[1];\n        }\n    }\n    // 7. ContentSnippet içeriğinden img tag'lerini bul\n    else if (item.contentSnippet && typeof item.contentSnippet === 'string') {\n        const imgMatch = item.contentSnippet.match(/<img[^>]+src=[\"']([^\"'>]+)[\"'][^>]*>/i);\n        if (imgMatch && imgMatch[1]) {\n            imageUrl = imgMatch[1];\n        }\n    }\n    \n    return imageUrl;\n}\n\n// 24 saat öncesini hesapla\nconst twentyFourHoursAgo = new Date(Date.now() - (24 * 60 * 60 * 1000));\n\n// Tarih filtrelemesi yaparak sadece son 24 saatteki haberleri al\nconst recentNews = allRssData.filter((item) => {\n    const newsDate = new Date(item.pubDate || item.isoDate || '1970-01-01');\n    return newsDate >= twentyFourHoursAgo;\n});\n\nconsole.log(`Filtreleme öncesi haber sayısı: ${allRssData.length}`);\nconsole.log(`24 saat filtresi sonrası haber sayısı: ${recentNews.length}`);\n\n// Sadece son 24 saatteki haberleri AI'ya gönder\nconst allNewsFormatted = recentNews.map((item, index) => {\n    // İngilizce başlık ve içeriği çevirmesi için AI'ya talimat ver\n    const title = item.title;\n    const content = item.contentSnippet || item.content || item.description;\n    const date = item.pubDate || item.isoDate || new Date().toISOString();\n    const link = item.link || '';\n    const imageUrl = extractImageFromRSS(item);\n\n    return `${index + 1}. BAŞLIK (Türkçe'ye çevir): ${title}\n     İÇERİK (Türkçe'ye çevir): ${content}\n     TARİH: ${date}\n     LİNK: ${link}\n     GÖRSEL: ${imageUrl}\n     \n     ---`;\n}).join('\\n');\n\nconst prompt = `\nAşağıda ${recentNews.length}  adet RSS haberi bulunuyor (Son 24 saat içinde yayınlanan). \n## GÖREV TANIMI\nVerilen RSS haber listesinden en ilginç 30 haberi seçerek Türkçe analiz raporu hazırla.\n\n\n## SEÇİM KRİTERLERİ (Öncelik Sırası)\n\n### Birinci Öncelik (En az 8-10 haber)\n1. **YAPAY ZEKA GELİŞMELERİ**: ChatGPT, LLM'ler, AI araçları, makine öğrenmesi\n2. **YENİ TEKNOLOJİK ÜRÜNLER**: Akıllı telefonlar, gadget'lar, yenilikçi yazılımlar\n3. **TEKNOLOJİ ŞİRKETLERİ**: Apple, Google, Microsoft, Meta, Tesla, OpenAI haberleri\n\n### İkinci Öncelik (En az 5-7 haber)\n4. **EĞİTİM TEKNOLOJİLERİ**\n5. **UZAY TEKNOLOJİSİ VE ROKET GELİŞMELERİ**\n6. **YENİLENEBİLİR ENERJİ TEKNOLOJİLERİ**\n\n### Üçüncü Öncelik (Kalan haberler)\n7. **BİOTEKNOLOJİ VE SAĞLIK TEKNOLOJİLERİ**\n8. **ROBOTLAR VE OTOMASYON**\n9. **ELEKTRİKLİ ARAÇLAR VE OTONOM SÜRÜŞ**\n10. **SİBER GÜVENLİK**\n\n## SEÇİM KURALLARI\n- ✅ Her konudan maksimum 3-4 haber seç\n- ✅ Aynı haberin farklı kaynaklardaki versiyonlarından sadece birini seç\n- ✅ Güncel ve etkili haberleri önceliklendir\n- ✅ Farklılık ve çeşitlilik sağla\n- ✅ Yayınlanma tarihi 24 saatten eski olan haberleri seçme.\n\n## ÇEVİRİ VE YERELLEŞTIRME TALİMATLARI\n\n### Dil Kuralları\n- Tüm içerikleri **akıcı ve doğal Türkçe**'ye çevir\n- Teknik terimleri uygun Türkçe karşılıklarıyla kullan\n- Anlaşılır ve güncel dil tercih et\n\n### Terim Çevirileri (Örnekler)\n- \"AI/Artificial Intelligence\" → \"Yapay Zeka\"\n- \"Machine Learning\" → \"Makine Öğrenmesi\"\n- \"Deep Learning\" → \"Derin Öğrenme\"\n- \"Smartphone\" → \"Akıllı Telefon\"\n- \"Electric Vehicle\" → \"Elektrikli Araç\"\n- \"Renewable Energy\" → \"Yenilenebilir Enerji\"\n\n## ÇIKTI FORMATI\n\n### Her Haber İçin Şablon\n\\`\\`\\`\nSLIDE [NUMARA]: [TÜRKÇE HABER BAŞLIĞI]\n• RSS Görsel: [Seçilen haberin orijinal görsel URL'si]\n• Açıklama: [50-75 kelimelik tek paragraf halinde: ana konu özeti, neden önemli olduğu ve gelecekteki potansiyel etkilerini içeren kapsamlı açıklama]\n  - Kaynak: [RSS verilerindeki LİNK alanından alınan URL'yi AYNEN buraya kopyala]\n\\`\\`\\`\n\n### ÖNEMLİ: KAYNAK URL KURALI\n- Her haberin \"LİNK:\" satırında verilen URL'yi, \"Kaynak:\" satırına değiştirmeden kopyala\n- URL'yi asla değiştirme, kısaltma veya başka bir URL ile değiştirme\n- Örnek: Eğer RSS'de \"LİNK: https://www.cbc.ca/news/example\" ise, çıktıda \"Kaynak: https://www.cbc.ca/news/example\" olmalı\n\n## KALİTE KONTROL LİSTESİ\n\n### İçerik Kontrolü\n- [ ] 30 farklı haber seçildi mi?\n- [ ] Her konu maksimum 3-4 haberle temsil ediliyor mu?\n- [ ] Tüm başlık ve içerikler Türkçe'ye çevrildi mi?\n- [ ] Teknik terimler doğru çevrildi mi?\n\n### Format Kontrolü\n- [ ] Açıklama bölümü 50-75 kelime arasında mı?\n- [ ] Açıklama tek paragraf halinde mi?\n- [ ] RSS Görsel URL'leri doğru mu?\n\n### Son Kontrol\n- [ ] Aynı konuda çok fazla haber var mı?\n- [ ] Çeviriler akıcı ve anlaşılır mı?\n- [ ] Teknik doğruluk korundu mu?\n\n## ÖRNEK ÇIKTI\n\n\\`\\`\\`\n SLIDE 1: OpenAI'nin Yeni GPT Modeli Bilim İnsanlarını Şaşırttı\n• RSS Görsel: https://example.com/openai-gpt-news-image.jpg\n• Açıklama: OpenAI'nin geliştirdiği yeni yapay zeka modeli matematik ve fen problemlerini insan seviyesinde çözebiliyor. Bu gelişme eğitim ve araştırma alanlarında devrim yaratacak potansiyele sahip çünkü karmaşık bilimsel soruları anlayarak adım adım çözüm üretebiliyor. Gelecekte öğrenciler ve araştırmacılar için güçlü bir yardımcı araç haline gelerek bilimsel keşifleri hızlandırabilir.\n  - Kaynak: https://example.com/openai-gpt-news\n\n\nSLIDE 2: Tesla'nın Yeni Batarya Teknolojisi Menzil Rekoru Kırdı\n• RSS Görsel: https://example.com/tesla-battery-tech.jpg\n• Açıklama: Tesla'nın geliştirdiği yeni lityum-demir-fosfat batarya teknolojisi tek şarjla 1000 km menzil sağlıyor ve daha hızlı şarj süreleri sunuyor. Bu teknoloji elektrikli araçların en büyük dezavantajlarından biri olan menzil kaygısını ortadan kaldırdığı için kritik öneme sahip. Elektrikli araç benimsenmesini hızlandırarak fosil yakıt bağımlılığını önemli ölçüde azaltabilir.\n  - Kaynak: https://example.com/tesla-battery-news\n\\`\\`\\`\n\n## KULLANIM TALİMATI\n1. RSS verilerini yukarıdaki formatta hazırla\n2. Çıktıyı kalite kontrol listesiyle değerlendir\n3. Gerekirse düzeltmeler yap\n${allNewsFormatted}\n\n\n`;\n\nreturn [{\n    json: {\n        prompt: prompt,\n        totalNewsCount: recentNews.length,\n        filteredNewsCount: recentNews.length,\n        originalNewsCount: allRssData.length,\n        processedAt: new Date().toISOString(),\n        debug: {\n            inputCount: $input.all().length,\n            dataStructure: recentNews.slice(0, 2)\n        }\n    }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -2260,
        -560
      ],
      "id": "a72e0210-fd98-41b1-8800-fb610ae2954e",
      "name": "News Processor"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.prompt }}",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2,
      "position": [
        -1900,
        -560
      ],
      "id": "4d3a4221-2b0d-4966-af71-78df133031e9",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "modelName": "models/gemini-2.5-pro",
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatGoogleGemini",
      "typeVersion": 1,
      "position": [
        -1860,
        -220
      ],
      "id": "d197daf8-2d16-40af-893e-c4c2b3797e4b",
      "name": "Google Gemini Chat Model",
      "credentials": {
        "googlePalmApi": {
          "id": "Ldd733Z8VKtKAj3f",
          "name": "Google Gemini(PaLM) Api account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// HTML Slide Content Processor \nconst inputData = $input.first().json;\nlet aiResponse = inputData.text || inputData.response || inputData.output || JSON.stringify(inputData);\n\nconsole.log('AI Response Debug:', aiResponse);\n\n// Tarih ve temel veri\nconst today = new Date();\nconst dateStr = today.toLocaleDateString('tr-TR');\n\n// Dosya adı için tarih formatı (örn: \"30 Haziran\")\nconst monthNames = [\n  'Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran',\n  'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'\n];\nconst day = today.getDate();\nconst monthName = monthNames[today.getMonth()];\nconst dateForFileName = `${day} ${monthName}`;\n\nconst slideData = {\n  title: 'Teknoloji Haberleri - ' + dateStr,\n  slides: []\n};\n\n// İntro slide ekle (Slide 1 olarak numaralandırılacak)\nslideData.slides.push({\n  title: 'Teknoloji Haberleri Özeti',\n  content: '<h2>' + dateStr + '</h2><h3>Günün En İlginç 30 Teknoloji Haberi</h3><p>RSS kaynaklarından alınan gerçek haberler ve görseller.</p>',\n  type: 'intro',\n  slideNumber: 1,\n  backgroundImage: 'https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=1200&q=80'\n});\n\n// Türkçe karakterleri doğru büyük harfe çevir\nfunction toTurkishUpperCase(str) {\n  return str.replace(/i/g, 'İ')\n            .replace(/ı/g, 'I')\n            .replace(/ş/g, 'Ş')\n            .replace(/ğ/g, 'Ğ')\n            .replace(/ü/g, 'Ü')\n            .replace(/ö/g, 'Ö')\n            .replace(/ç/g, 'Ç')\n            .toUpperCase();\n}\n\n// HTML attribute'larını güvenli hale getiren fonksiyon\nfunction escapeHtml(text) {\n  if (typeof text !== 'string') return '';\n  return text.replace(/&/g, '&amp;')\n             .replace(/</g, '&lt;')\n             .replace(/>/g, '&gt;')\n             .replace(/\"/g, '&quot;')\n             .replace(/'/g, '&#39;');\n}\n\n// Varsayılan teknoloji görselleri (RSS'de görsel yoksa)\nconst defaultTechImages = [\n  'https://images.unsplash.com/photo-1488590528505-98d2b5aba04b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80',\n  'https://images.unsplash.com/photo-1516321318423-f06f85e504b3?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80',\n  'https://images.unsplash.com/photo-1555255707-c07966088b7b?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80',\n  'https://images.unsplash.com/photo-1518709268805-4e9042af2176?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80',\n  'https://images.unsplash.com/photo-1485827404703-89b55fcc595e?ixlib=rb-4.0.3&ixid=M3wxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8fA%3D%3D&auto=format&fit=crop&w=800&q=80'\n];\n\n// AI response işle\nif (aiResponse && typeof aiResponse === 'string' && aiResponse !== 'Veri bulunamadı') {\n  const slideMatches = aiResponse.match(/SLIDE [0-9]+:[^]*?(?=(?:SLIDE [0-9]+:|$))/g) || [];\n  \n  if (slideMatches.length > 0) {\n    slideMatches.forEach((slideText, index) => {\n      const lines = slideText.split('\\n').filter(line => line.trim());\n      \n      if (lines.length > 0) {\n        const titleMatch = lines[0].match(/^SLIDE [0-9]+:[ ]*(.+)$/);\n        let title = titleMatch ? titleMatch[1].trim() :\n          'Haber ' + (index + 1);\n        \n        // Türkçe büyük harf dönüşümü\n        title = toTurkishUpperCase(title);\n        \n        let content = '';\n        let rssImageUrl = '';\n        let sourceInfo = {\n          name: '',\n          link: ''\n        };\n        \n        const contentLines = lines.slice(1).filter(line => line.trim());\n        \n        contentLines.forEach(line => {\n          const trimmedLine = line.trim();\n          // Kaynak satırını daha geniş arama ile yakala\n          if (trimmedLine.startsWith('•') || trimmedLine.startsWith('-') || \n              trimmedLine.toLowerCase().includes('kaynak:') || \n              trimmedLine.toLowerCase().includes('rss görsel:')) {\n            const cleanLine = trimmedLine.replace(/^[•\\-][ ]*/, '');\n            if (cleanLine.includes(':')) {\n              const parts = cleanLine.split(':');\n              if (parts.length > 1) {\n                const fieldName = parts[0].trim();\n                let fieldValue = parts.slice(1).join(':').trim();\n                \n                // RSS Görsel alanını özel olarak yakala\n                if (fieldName === 'RSS Görsel') {\n                  if (fieldValue && fieldValue !== 'YOK' && fieldValue !== '' && fieldValue.startsWith('http')) {\n                    rssImageUrl = fieldValue;\n                    console.log(`Slide ${index + 1}: RSS görsel bulundu - ${fieldValue}`);\n                  }\n                } \n                // Kaynak bilgisini yakala  \n                else if (fieldName.toLowerCase() === 'kaynak') {\n                  console.log(`Slide ${index + 1}: Kaynak satırı işleniyor: \"${cleanLine}\"`);\n                  \n                  // URL'i bul\n                  const linkMatch = fieldValue.match(/(https?:\\/\\/[^\\s]+)/);\n                  if (linkMatch) {\n                    sourceInfo.link = linkMatch[0];\n                    \n                    // Site adını al - format: \"NTV: https://...\" veya \"The Guardian: https://...\"\n                    let siteName = '';\n                    \n                    // URL'den önceki kısmı al\n                    const beforeUrl = fieldValue.substring(0, fieldValue.indexOf(linkMatch[0])).trim();\n                    if (beforeUrl && beforeUrl !== '') {\n                      siteName = beforeUrl.replace(/^:+|:+$/g, '').trim();\n                    }\n                    \n                    // Eğer hala boşsa URL'den site adını çıkar\n                    if (!siteName) {\n                      try {\n                        const urlObj = new URL(sourceInfo.link);\n                        siteName = urlObj.hostname.replace('www.', '').toUpperCase();\n                      } catch (e) {\n                        siteName = 'Haber Kaynağı';\n                      }\n                    }\n                    \n                    sourceInfo.name = siteName;\n                    console.log(`Slide ${index + 1}: Kaynak başarıyla ayrıştırıldı - Ad: \"${sourceInfo.name}\", Link: \"${sourceInfo.link}\"`);\n                  } else {\n                    console.log(`Slide ${index + 1}: Kaynak satırında URL bulunamadı: \"${fieldValue}\"`);\n                  }\n                } \n                // Diğer alanları içeriğe ekle\n                else if (fieldName !== 'RSS Görsel' && fieldName.toLowerCase() !== 'kaynak') {\n                  // İçeriği temizle: son kısımdaki --  ve - karakterlerini kaldır\n                  let cleanContent = fieldValue.replace(/\\s*-+\\s*$/, '').trim();\n                  if (cleanContent) {\n                    content += cleanContent + ' ';\n                  }\n                }\n              }\n            } else {\n              // İçeriği temizle: son kısımdaki --  ve - karakterlerini kaldır\n              let cleanContent = cleanLine.replace(/\\s*-+\\s*$/, '').trim();\n              if (cleanContent) {\n                content += cleanContent + ' ';\n              }\n            }\n          }\n        });\n        \n        // Debug: Kaynak bilgisini kontrol et\n        console.log(`Slide ${index + 1}: sourceInfo kontrolü`, sourceInfo);\n        \n        // Görsel öncelik: 1) RSS'den gelen gerçek görsel 2) Varsayılan teknoloji görseli\n        let slideImage;\n        if (rssImageUrl && rssImageUrl.length > 10 && rssImageUrl.startsWith('http')) {\n          slideImage = rssImageUrl;\n          console.log(`Slide ${index + 1}: RSS görsel kullanılıyor - ${rssImageUrl}`);\n        } else {\n          // RSS'de görsel yoksa varsayılan teknoloji görseli kullan\n          slideImage = defaultTechImages[index % defaultTechImages.length];\n          console.log(`Slide ${index + 1}: RSS görsel yok, varsayılan teknoloji görseli kullanılıyor`);\n        }\n        \n        // Final slide objesini oluştur - Slide numarası ekle (intro = 1, haber slide'ları 2'den başlar)\n        const slideNumber = index + 2; // intro slide'ı 1 olduğu için haber slide'ları 2'den başlar\n        \n        // Kaynak linkini içeriğin sonuna güzelce ekle\n        let sourceHtml = '';\n        if (sourceInfo.link && sourceInfo.link.trim() !== '') {\n          const safeSourceName = escapeHtml(sourceInfo.name || 'Haber Kaynağı');\n          sourceHtml = `\n            <div class=\"news-source-container\">\n              <div class=\"source-label\">\n                 <strong><a href=\"${sourceInfo.link}\" target=\"_blank\" rel=\"noopener noreferrer\" class=\"source-link\">\n                🔗 ${safeSourceName}\n              </a> </strong>\n              </div>\n              \n            </div>`;\n          console.log(`Slide ${index + 1}: Kaynak linki eklendi - ${safeSourceName}`);\n        } else {\n          console.log(`Slide ${index + 1}: Kaynak linki bulunamadı veya boş`);\n        }\n        \n        const finalSlide = {\n          title: title,\n          content: content + sourceHtml, // slide-content div'ini burada eklemeyeceğiz, sonra ekleyeceğiz\n          type: 'content',\n          imageUrl: slideImage,\n          sourceLink: sourceInfo.link || null,\n          sourceName: sourceInfo.name || null,\n          slideNumber: slideNumber\n        };\n        \n        slideData.slides.push(finalSlide);\n        console.log(`Slide ${slideNumber}: Slide oluşturuldu -`, finalSlide.title);\n      }\n    });\n  }\n  \n  if (slideMatches.length === 0) {\n    slideData.slides.push({\n      title: 'AI Analizi',\n      content: '<p>' + aiResponse.substring(0, 1000) + '</p>',\n      type: 'content',\n      slideNumber: 2\n    });\n  }\n} else {\n  slideData.slides.push({\n    title: 'Bilgi',\n    content: '<p>AI Agent yanıtı işlenemiyor. Lütfen workflow bağlantılarını kontrol edin.</p>',\n    type: 'error',\n    slideNumber: 2\n  });\n}\n\n// Tüm slide'lara slide numarası ekle\nslideData.slides.forEach((slide, index) => {\n  if (!slide.slideNumber) {\n    slide.slideNumber = index + 1;\n  }\n});\n\n// Trend analizi slide'ı ekle\nconst lastSlideNumber = slideData.slides.length + 1;\nslideData.slides.push({\n  title: 'Günün Teknoloji Trendleri',\n  content: '<ul class=\"trend-list\"><li>🤖 Yapay Zeka ve ChatGPT gelişmeleri</li><li>🚗 Elektrikli araç ve otonom sürüş</li><li>📱 Yeni akıllı telefon ve gadget lansmanları</li><li>🔒 Siber güvenlik ve veri gizliliği</li><li>🚀 Uzay teknolojisi ve roket projeleri</li><li>💡 Yenilenebilir enerji çözümleri</li><li>🏢 Büyük teknoloji şirketlerinin stratejileri</li><li>🔬 Biyoteknoloji ve sağlık innovasyonları</li></ul>',\n  type: 'summary',\n  slideNumber: lastSlideNumber\n});\n\n// HTML template oluştur\nlet htmlTemplate = '<!DOCTYPE html><html><head><meta charset=\"utf-8\"><title>' + slideData.title + '</title>';\nhtmlTemplate += '<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/4.5.0/reveal.min.css\">';\nhtmlTemplate += '<link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/4.5.0/theme/white.min.css\">';\nhtmlTemplate += '<style>';\nhtmlTemplate += '.reveal{font-family:-apple-system,BlinkMacSystemFont,sans-serif;font-size:16px}';\nhtmlTemplate += '.reveal h1{font-size:2.0em;color:#2c3e50;margin-bottom:0.3em}';\nhtmlTemplate += '.reveal h2{font-size:1.6em;color:#2c3e50;padding-bottom:0.2em;margin-bottom:0.5em}';\nhtmlTemplate += '.reveal .slides section{text-align:left;padding:15px;height:100vh;display:flex;flex-direction:column;box-sizing:border-box}';\nhtmlTemplate += '.slide-content{font-size:24px;line-height:1.5;background:#fff;padding:20px;border-radius:8px;box-shadow:0 2px 8px rgba(0,0,0,0.1);flex:1;overflow:hidden}';\n\n// İntro slide CSS - Düzeltilmiş\nhtmlTemplate += '.intro-slide{text-align:center;padding:0px;background:linear-gradient(135deg,#667eea 0%,#764ba2 100%);color:white;border-radius:50px;height:60vh;display:flex;flex-direction:column;justify-content:center;align-items:center}';\nhtmlTemplate += '.intro-slide h1,.intro-slide h2,.intro-slide h3{color:white;margin:0.5em 0}';\nhtmlTemplate += '.intro-slide h1{font-size:2.2em}';\nhtmlTemplate += '.intro-slide h2{font-size:1.8em}';\nhtmlTemplate += '.intro-slide h3{font-size:1.4em}';\nhtmlTemplate += '.intro-slide p{font-size:1.2em;margin:1em 0}';\n\n// Liste stilleri\nhtmlTemplate += '.trend-list{list-style:none;padding:0;font-size:1.1em;margin:0}';\nhtmlTemplate += '.trend-list li{padding:12px 20px;background:#f8f9fa;border-radius:6px;border-left:4px solid #3498db;margin:8px 0;font-size:15px}';\n// Kaldırıldı: Trend list hover efekti\n\n// Hata içeriği\nhtmlTemplate += '.error-content{color:#d32f2f;background:#ffebee;padding:15px;border-radius:6px;font-size:14px}';\n\n\n\n// Kaynak gösterimi için CSS - Geliştirilmiş\nhtmlTemplate += '.news-source-container{margin-top:30px;padding:20px;border-top:3px solid #e8f4fd;background:linear-gradient(135deg,#f8f9fa,#ffffff);border-radius:10px;box-shadow:0 3px 8px rgba(0,0,0,0.1)}';\nhtmlTemplate += '.source-label{font-size:15px;color:#555;margin-bottom:12px;font-weight:600}';\nhtmlTemplate += '.source-link {display: inline-block;background: rgb(248, 249, 250);border: 1px solid rgb(222, 226, 230);border-radius: 6px;padding: 8px 12px;color: rgb(73, 80, 87);text-decoration: none;font-size: 13px;transition: 0.2s;}';\nhtmlTemplate += '.source-link:hover{transform:translateY(-3px);box-shadow:0 6px 16px rgba(52,152,219,0.4);background:linear-gradient(135deg,#2980b9,#3498db)}';\n\n// Responsive tasarım\nhtmlTemplate += '@media (max-width: 768px){.slide-content{padding:15px}}';\n\n// Reveal.js kontrolleri\nhtmlTemplate += '.reveal .controls{position:fixed !important;top:50% !important;left:0 !important;right:0 !important;bottom:auto !important;width:100% !important;height:0 !important;transform:translateY(-50%) !important}.reveal .controls .navigate-left,.reveal .controls .navigate-right{position:fixed !important;top:50% !important;bottom:auto !important;transform:translateY(-50%) !important}.reveal .controls .navigate-left{left:15px !important;right:auto !important}.reveal .controls .navigate-right{right:15px !important;left:auto !important}';\n\n\nhtmlTemplate += '</style>';\nhtmlTemplate += '</head><body><div class=\"reveal\"><div class=\"slides\">';\n\n// Slide'ları oluştur - Düzeltilmiş\nfor (let i = 0; i < slideData.slides.length; i++) {\n  const slide = slideData.slides[i];\n  \n  if (slide.type === 'intro') {\n    // İntro slide - Özel layout\n    htmlTemplate += '<section data-background-color=\"#667eea\">';\n    htmlTemplate += '<div class=\"intro-slide\">';\n    htmlTemplate += '<h1>' + escapeHtml(slide.title) + '</h1>';\n    htmlTemplate += slide.content;\n    htmlTemplate += '</div>';\n    htmlTemplate += '</section>';\n  } else if (slide.type === 'summary') {\n    // Özet slide\n    htmlTemplate += '<section>';\n    htmlTemplate += '<h2>' + escapeHtml(slide.title) + '</h2>';\n    htmlTemplate += '<div class=\"slide-content\">';\n    htmlTemplate += slide.content;\n    htmlTemplate += '</div>';\n    htmlTemplate += '</section>';\n  } else {\n    // Normal haber slide'ları\n    htmlTemplate += '<section>';\n    htmlTemplate += '<h2>' + escapeHtml(slide.title || 'Haber') + '</h2>';\n    \n    // Görsel varsa ekle\n    if (slide.imageUrl) {\n      let safeImageUrl = slide.imageUrl;\n      \n      // URL doğrulama\n      if (!safeImageUrl || typeof safeImageUrl !== 'string' || safeImageUrl.length < 10 || \n          (!safeImageUrl.startsWith('https://') && !safeImageUrl.startsWith('http://'))) {\n        safeImageUrl = defaultTechImages[0];\n        console.log(`Invalid image URL detected: ${slide.imageUrl}, using fallback`);\n      }\n      \n      htmlTemplate += '<div style=\"text-align:center;margin:15px 0;\">';\n      htmlTemplate += '<img src=\"' + safeImageUrl + '\" alt=\"' + escapeHtml(slide.title || 'Haber') + '\" ';\n      htmlTemplate += 'style=\"width:100%;max-width:700px;height:250px;object-fit:cover;border-radius:12px;box-shadow:0 6px 20px rgba(0,0,0,0.15);\" ';\n      htmlTemplate += 'onerror=\"this.src=\\'' + defaultTechImages[0] + '\\';\"/>';\n      htmlTemplate += '</div>';\n    }\n    \n    // İçerik\n    htmlTemplate += '<div class=\"slide-content\">';\n    htmlTemplate += slide.content;\n    htmlTemplate += '</div>';\n    htmlTemplate += '</section>';\n  }\n}\n\nhtmlTemplate += '</div></div>';\nhtmlTemplate += '<script src=\"https://cdnjs.cloudflare.com/ajax/libs/reveal.js/4.5.0/reveal.min.js\"></script>';\nhtmlTemplate += '<script>';\nhtmlTemplate += 'Reveal.initialize({';\nhtmlTemplate += 'controls:true,';\nhtmlTemplate += 'progress:true,';\nhtmlTemplate += 'center:false,';\nhtmlTemplate += 'hash:true,';\nhtmlTemplate += 'transition:\"slide\",';\nhtmlTemplate += 'transitionSpeed:\"default\",';\nhtmlTemplate += 'backgroundTransition:\"fade\",';\nhtmlTemplate += 'navigationMode:\"linear\",';\nhtmlTemplate += 'keyboard:true,';\nhtmlTemplate += 'overview:true,';\nhtmlTemplate += 'touch:true,';\nhtmlTemplate += 'loop:false,';\nhtmlTemplate += 'rtl:false,';\nhtmlTemplate += 'fragments:true';\nhtmlTemplate += '});';\nhtmlTemplate += '</script>';\nhtmlTemplate += '</body></html>';\n\nreturn [{\n  json: {\n    title: slideData.title,\n    slides: slideData.slides,\n    slideCount: slideData.slides.length,\n    htmlContent: htmlTemplate,\n    fileName: `${dateForFileName} Teknoloji-Haberleri.html`,\n    fileSize: Buffer.byteLength(htmlTemplate, 'utf8'),\n    createdAt: new Date().toISOString(),\n    debug: {\n      aiResponseLength: aiResponse ? aiResponse.length : 0,\n      slidesFound: slideData.slides.length - 2,\n      totalSlides: slideData.slides.length\n    }\n  }\n}]; "
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1480,
        -560
      ],
      "id": "4b83e54a-0476-419a-be20-d7cda978045b",
      "name": "HTML Slide Content Processor"
    },
    {
      "parameters": {
        "jsCode": "// HTML içeriğini binary data'ya çevir\nconst htmlData = $input.first().json;\n\n// HTML içeriğini kontrol et\nif (!htmlData.htmlContent || typeof htmlData.htmlContent !== 'string') {\n  throw new Error('HTML içeriği bulunamadı veya geçersiz format. htmlContent alanı boş veya undefined.');\n}\n\nconsole.log('HTML Content Length:', htmlData.htmlContent.length);\nconsole.log('HTML Data Keys:', Object.keys(htmlData));\n\n// HTML içeriğini Buffer'a çevir\nconst htmlBuffer = Buffer.from(htmlData.htmlContent, 'utf8');\n\nreturn [{\n  json: {\n    fileName: htmlData.fileName || `${new Date().getDate()} ${['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'][new Date().getMonth()]} Teknoloji-Haberleri.html`,\n    title: htmlData.title || 'Teknoloji Haberleri',\n    slideCount: htmlData.slideCount || 0,\n    fileSize: htmlData.fileSize || htmlBuffer.length,\n    createdAt: htmlData.createdAt || new Date().toISOString()\n  },\n  binary: {\n    data: {\n      data: htmlBuffer,\n      mimeType: 'text/html',\n      fileName: htmlData.fileName || `${new Date().getDate()} ${['Ocak', 'Şubat', 'Mart', 'Nisan', 'Mayıs', 'Haziran', 'Temmuz', 'Ağustos', 'Eylül', 'Ekim', 'Kasım', 'Aralık'][new Date().getMonth()]} Teknoloji-Haberleri.html`,\n      fileExtension: 'html'\n    }\n  }\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -1200,
        -560
      ],
      "id": "9c990142-24d9-49f0-b805-c5c12c12fc6a",
      "name": "Binary Converter"
    },
    {
      "parameters": {
        "driveId": {
          "__rl": true,
          "mode": "list",
          "value": "My Drive"
        },
        "folderId": {
          "__rl": true,
          "value": "1CRBZ02CSXIEI2TnYY-zt80qBGUMm3KXW",
          "mode": "list",
          "cachedResultName": "n8nNews",
          "cachedResultUrl": "https://drive.google.com/drive/folders/1CRBZ02CSXIEI2TnYY-zt80qBGUMm3KXW"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.googleDrive",
      "typeVersion": 3,
      "position": [
        -920,
        -560
      ],
      "id": "2e78c59c-6559-4ee1-8fb6-be985ec2f368",
      "name": "Google Drive'a Kaydet",
      "credentials": {
        "googleDriveOAuth2Api": {
          "id": "d8nqozvaev3CnGf7",
          "name": "Google Drive account"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "// Google Drive upload sonucu işle\nconst driveResult = $input.first().json;\nconst htmlData = $('HTML Slide Content Processor').first().json;\n\nconsole.log('Google Drive Response:', JSON.stringify(driveResult, null, 2));\n\n// Başarı mesajı ve dosya bilgileri\nconst completionData = {\n  status: 'success',\n  message: 'Teknoloji haberleri HTML sunumu başarıyla Google Drive\\'a kaydedildi!',\n  presentationTitle: htmlData.title,\n  slideCount: htmlData.slideCount,\n  fileName: htmlData.fileName || 'teknoloji-haberleri.html',\n  fileSize: `${Math.round(htmlData.fileSize / 1024)} KB`,\n  createdAt: new Date().toISOString(),\n  dateFormatted: new Date().toLocaleDateString('tr-TR', {\n    year: 'numeric',\n    month: 'long',\n    day: 'numeric',\n    hour: '2-digit',\n    minute: '2-digit'\n  }),\n  googleDrive: {\n    fileId: driveResult.id || 'Bilinmiyor',\n    fileName: driveResult.name || htmlData.fileName || 'teknoloji-haberleri.html',\n    webViewLink: driveResult.webViewLink || 'Link bulunamadı',\n    webContentLink: driveResult.webContentLink || 'İndirme linki bulunamadı',\n    directLink: `https://drive.google.com/file/d/${driveResult.id}/view?usp=sharing`,\n    downloadLink: `https://drive.google.com/uc?export=download&id=${driveResult.id}`,\n    size: driveResult.size || 'Bilinmiyor',\n    owners: driveResult.owners || 'Bilinmiyor',\n    createdTime: driveResult.createdTime || 'Bilinmiyor'\n  },\n  features: [\n    '✨ Sadece RSS görsellerini kullanır',\n    '📱 Mobil uyumlu responsive tasarım', \n    '🎨 Güzel geçiş animasyonları',\n    '📊 Otomatik slide numaralandırma',\n    '🎯 İnteraktif navigasyon',\n    '☁️ Otomatik Google Drive kayıt',\n    '🖼️ RSS kaynaklı gerçek görseller'\n  ]\n};\n\nreturn [{\n  json: completionData\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -660,
        -560
      ],
      "id": "40936155-438b-400e-aceb-60e573c2817d",
      "name": "Completion Processor"
    },
    {
      "parameters": {
        "jsCode": "// E-posta için veri hazırla\nconst completionData = $input.first().json;\nconst htmlBinaryData = $('Binary Converter').first().binary;\n\n// E-posta içeriği hazırla\nconst emailData = {\n  to: 'alicangullu84@gmail.com',\n  from: 'vli.kcc@gmail.com',\n  subject: `📊 Günlük Teknoloji Haberleri Sunumu - ${completionData.dateFormatted}`,\n  body: `\n    <div style=\"font-family: Arial, sans-serif; max-width: 600px; margin: 0 auto; padding: 20px; background-color: #f8f9fa;\">\n      <div style=\"background: linear-gradient(135deg, #667eea 0%, #764ba2 100%); color: white; padding: 30px; border-radius: 10px; text-align: center; margin-bottom: 20px;\">\n        <h1 style=\"margin: 0; font-size: 24px;\">📊 Günlük Teknoloji Haberleri</h1>\n        <p style=\"margin: 10px 0 0 0; font-size: 16px; opacity: 0.9;\">${completionData.dateFormatted}</p>\n      </div>\n      \n      <div style=\"background: white; padding: 25px; border-radius: 10px; box-shadow: 0 2px 10px rgba(0,0,0,0.1);\">\n        <h2 style=\"color: #2c3e50; margin-top: 0;\">📈 Sunum Özeti</h2>\n        \n        <div style=\"background: #e8f4fd; padding: 15px; border-radius: 8px; border-left: 4px solid #3498db; margin: 15px 0;\">\n          <strong>📝 Slide Sayısı:</strong> ${completionData.slideCount}<br>\n          <strong>📁 Dosya Boyutu:</strong> ${completionData.fileSize}<br>\n          <strong>⏰ Oluşturulma:</strong> ${completionData.dateFormatted}\n        </div>\n        \n        <h3 style=\"color: #2c3e50;\">✨ Sunum Özellikleri:</h3>\n        <ul style=\"line-height: 1.6; color: #555;\">\n          ${completionData.features.map(feature => `<li>${feature}</li>`).join('')}\n        </ul>\n        \n        <div style=\"background: #fff3cd; padding: 15px; border-radius: 8px; border-left: 4px solid #ffc107; margin: 20px 0;\">\n          <strong>📎 Ek Dosya:</strong> ${completionData.fileName}<br>\n          <small style=\"color: #666;\">Bu dosyayı tarayıcınızda açarak sunumu görüntüleyebilirsiniz.</small>\n        </div>\n        \n        <div style=\"background: #d1ecf1; padding: 15px; border-radius: 8px; border-left: 4px solid #17a2b8; margin: 20px 0;\">\n          <strong>☁️ Google Drive Linki:</strong><br>\n          <a href=\"${completionData.googleDrive.directLink}\" style=\"color: #17a2b8; text-decoration: none;\">Sunumu Google Drive'da Görüntüle</a>\n        </div>\n        \n        <hr style=\"border: none; border-top: 1px solid #eee; margin: 25px 0;\">\n        \n        <div style=\"text-align: center; color: #666; font-size: 14px;\">\n          <p>Bu e-posta otomatik olarak n8n workflow sistemi tarafından gönderilmiştir.</p>\n          <p>Günlük teknoloji haberlerini kaçırmayın! 🚀</p>\n        </div>\n      </div>\n    </div>\n  `,\n  attachmentName: completionData.fileName,\n  attachmentMimeType: 'text/html'\n};\n\nreturn [{\n  json: emailData,\n  binary: htmlBinaryData\n}];"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -380,
        -560
      ],
      "id": "c32da1ac-6284-45e9-b66b-a001732e0a54",
      "name": "E-posta Hazırlayıcı"
    },
    {
      "parameters": {
        "sendTo": "={{ $json.to }}",
        "subject": "={{ $json.subject }}",
        "message": "={{ $json.body }}",
        "options": {
          "attachmentsUi": {
            "attachmentsBinary": [
              {}
            ]
          }
        }
      },
      "type": "n8n-nodes-base.gmail",
      "typeVersion": 2.1,
      "position": [
        -100,
        -560
      ],
      "id": "82c28e19-a922-40fc-968c-fb781ce38aa2",
      "name": "Gmail Gönder",
      "webhookId": "6ede2f3c-006a-4bb1-93d2-9a8262604be8",
      "credentials": {
        "gmailOAuth2": {
          "id": "koGjmzX16nNh9suZ",
          "name": "Gmail account"
        }
      }
    },
    {
      "parameters": {
        "numberInputs": 10
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -3280,
        -460
      ],
      "id": "3e05acdc-674f-423f-bced-4851571b4c4d",
      "name": "Merge"
    },
    {
      "parameters": {
        "numberInputs": 10
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -3280,
        -1000
      ],
      "id": "c5e77922-1339-4af7-ad1e-5f72cb7af5ca",
      "name": "Merge1"
    },
    {
      "parameters": {
        "numberInputs": 10
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -3280,
        -1520
      ],
      "id": "b8ff0b65-6536-41c5-ada9-426b93def5e4",
      "name": "Merge2"
    },
    {
      "parameters": {
        "numberInputs": 5
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -3280,
        80
      ],
      "id": "db63ca5c-86f1-41b7-bca6-da0ac9522eb8",
      "name": "Merge3"
    },
    {
      "parameters": {
        "numberInputs": 4
      },
      "type": "n8n-nodes-base.merge",
      "typeVersion": 3.2,
      "position": [
        -2680,
        -580
      ],
      "id": "24b966b0-ad76-42ab-a324-f374b12f1ee0",
      "name": "Merge4"
    },
    {
      "parameters": {
        "rule": {
          "interval": [
            {
              "triggerAtHour": 7,
              "triggerAtMinute": 30
            }
          ]
        }
      },
      "type": "n8n-nodes-base.scheduleTrigger",
      "typeVersion": 1.2,
      "position": [
        -4980,
        -720
      ],
      "id": "7c122d60-9cb9-42d2-a929-0a68d2a1e646",
      "name": "Schedule Trigger"
    }
  ],
  "pinData": {},
  "connections": {
    "RSS Read": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "RSS Read1": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "RSS Read2": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "RSS Read3": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "RSS Read4": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "RSS Read5": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 5
          }
        ]
      ]
    },
    "RSS Read8": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 8
          }
        ]
      ]
    },
    "RSS Read9": {
      "main": [
        [
          {
            "node": "Merge",
            "type": "main",
            "index": 9
          }
        ]
      ]
    },
    "RSS Read12": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "RSS Read13": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "RSS Read14": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 4
          }
        ]
      ]
    },
    "RSS Read15": {
      "main": [
        [
          {
            "node": "Merge1",
            "type": "main",
            "index": 5
          }
        ]
      ]
    },
    "RSS Read21": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 7
          }
        ]
      ]
    },
    "RSS Read22": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 8
          }
        ]
      ]
    },
    "RSS Read25": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "RSS Read27": {
      "main": [
        [
          {
            "node": "Merge2",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "RSS Read30": {
      "main": [
        [
          {
            "node": "Merge3",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "News Processor": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "AI Agent": {
      "main": [
        [
          {
            "node": "HTML Slide Content Processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Gemini Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Binary Converter": {
      "main": [
        [
          {
            "node": "Google Drive'a Kaydet",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Google Drive'a Kaydet": {
      "main": [
        [
          {
            "node": "Completion Processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Completion Processor": {
      "main": [
        [
          {
            "node": "E-posta Hazırlayıcı",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTML Slide Content Processor": {
      "main": [
        [
          {
            "node": "Binary Converter",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge3": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 3
          }
        ]
      ]
    },
    "Merge4": {
      "main": [
        [
          {
            "node": "News Processor",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge2": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Merge1": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 1
          }
        ]
      ]
    },
    "Merge": {
      "main": [
        [
          {
            "node": "Merge4",
            "type": "main",
            "index": 2
          }
        ]
      ]
    },
    "Schedule Trigger": {
      "main": [
        [
          {
            "node": "RSS Read25",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read27",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read21",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read22",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read12",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read13",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read14",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read15",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read1",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read2",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read3",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read4",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read5",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read8",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read9",
            "type": "main",
            "index": 0
          },
          {
            "node": "RSS Read30",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "E-posta Hazırlayıcı": {
      "main": [
        [
          {
            "node": "Gmail Gönder",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "active": false,
  "settings": {
    "executionOrder": "v1"
  },
  "versionId": "bd56cf03-c29c-4eeb-aa41-1f0aa9fe11a6",
  "meta": {
    "templateCredsSetupCompleted": true,
    "instanceId": "1953f49187dd2d9c84b269d245190f7b373cb65a2726425e663abcc84429316c"
  },
  "id": "7MRUHTnGmSGIocou",
  "tags": []
}